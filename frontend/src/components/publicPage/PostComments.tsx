import React, { FormEvent, useState } from "react";
import { Comment } from "../../App";

interface CommentsProps {
  postId: string;
  comments: Comment[];
}

export default function PostComments({ postId, comments }: CommentsProps) {
  const [allComments, setAllComments] = useState(comments);
  const [newCommentContent, setNewCommentContent] = useState("");
  const [commentName, setCommentName] = useState("");
  const [isCommentsVisible, setIsCommentsVisible] = useState(true); // State to toggle visibility

  const handlePostName = (event: React.ChangeEvent<HTMLInputElement>) => {
    setCommentName(event.target.value);
  };

  const handlePostComment = async (event: FormEvent) => {
    event.preventDefault();

    if (!commentName) {
      console.log("Name is required");
      return;
    }

    const formatDate = () => {
      const now = new Date();
      return now.toISOString().replace("T", " ").slice(0, 19); // YYYY-MM-DD HH:MM:SS
    };

    const newCommentBody: Comment = {
      id: "", // ID will be generated by the backend
      name: commentName,
      postTime: formatDate(),
      content: newCommentContent,
      postId: postId,
    };

    setAllComments([...allComments, newCommentBody]);
    setNewCommentContent("");
    setCommentName(""); // Reset the name field after posting
  };

  const toggleCommentsVisibility = () => {
    setIsCommentsVisible(!isCommentsVisible);
  };

  return (
    <div className="p-6">
      <button
        className="text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 w-full font-medium rounded-lg text-sm py-2.5 text-center me-2 mb-2"
        onClick={toggleCommentsVisibility}
      >
        <h2 className="text-lg font-bold">Σχόλια</h2>
      </button>

      <div
        className={`transition-all duration-500 ease-in-out overflow-hidden ${
          isCommentsVisible ? "max-h-[1000px]" : "max-h-0"
        }`}
      >
        <div className="flex flex-col space-y-4">
          {allComments.map((comment) => (
            <div key={comment.id} className="bg-white p-4 rounded-lg shadow-md">
              <div className="flex items-center space-x-3">
                <div>
                  <p className="text-sm font-semibold">{comment.name}</p>
                  <p className="text-xs text-gray-500">{comment.postTime}</p>
                </div>
              </div>
              <p className="text-gray-700">{comment.content}</p>
            </div>
          ))}

          <form
            className="bg-white p-4 rounded-lg shadow-md"
            onSubmit={handlePostComment}
          >
            <h3 className="text-lg font-bold mb-2">Σχολιάστε</h3>
            <div className="mb-4">
              <label
                className="block text-gray-700 font-bold mb-2"
                htmlFor="name"
              >
                Όνομα
              </label>
              <input
                type="text"
                id="name"
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                placeholder="Γράψτε το όνομά σας..."
                value={commentName}
                onChange={handlePostName}
                required
              />
            </div>

            <div className="mb-4">
              <label
                className="block text-gray-700 font-bold mb-2"
                htmlFor="comment"
              >
                Σχόλιο
              </label>
              <textarea
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                id="comment"
                placeholder="Γράψτε το σχόλιό σας..."
                value={newCommentContent}
                onChange={(e) => setNewCommentContent(e.target.value)}
                required
              ></textarea>
            </div>
            <button
              className="bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
              type="submit"
            >
              Αποθήκευση
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}
